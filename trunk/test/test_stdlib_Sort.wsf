<?xml version="1.0" ?>
<job id="test_stdlib_Sort">
<script language="VBScript" src="../stdlib.vbs" />
<script language="VBScript" src="../unittest.vbs" />
<script language="VBScript"><![CDATA[

Option Explicit

UnitTest_Description "stdlib.vbs: Sort function test."

Sub TestSwapArrayItem_ValueAndValue
  Dim a(1)
  a(0) = "foo"
  a(1) = "bar"
  SwapArrayItem a, 0, 1
  AssertEqual "bar", a(0)
  AssertEqual "foo", a(1)
End Sub
UnitTest_TestCase "TestSwapArrayItem_ValueAndValue"

Sub TestSwapArrayItem_ValueAndObject
  Dim a(1)
  Dim obj: Set obj = CreateObject("Scripting.Dictionary")
  a(0) = "foo"
  Set a(1) = obj
  SwapArrayItem a, 0, 1
  AssertSame obj, a(0)
  AssertEqual "foo", a(1)
End Sub
UnitTest_TestCase "TestSwapArrayItem_ValueAndObject"

Sub TestSwapArrayItem_ObjectAndObject
  Dim a(1)
  Dim obj1: Set obj1 = CreateObject("Scripting.Dictionary")
  Dim obj2: Set obj2 = CreateObject("Scripting.Dictionary")
  Set a(0) = obj1
  Set a(1) = obj2
  SwapArrayItem a, 0, 1
  AssertSame obj2, a(0)
  AssertSame obj1, a(1)
End Sub
UnitTest_TestCase "TestSwapArrayItem_ObjectAndObject"

Sub TestNumberCompare_Equal
  Dim comp: Set comp = New NumberCompare
  Assert comp(1, 1) = 0
End Sub
UnitTest_TestCase "TestNumberCompare_Equal"

Sub TestNumberCompare_Greater
  Dim comp: Set comp = New NumberCompare
  Assert comp(2, 1) > 0
End Sub
UnitTest_TestCase "TestNumberCompare_Greater"

Sub TestNumberCompare_Less
  Dim comp: Set comp = New NumberCompare
  Assert comp(1, 2) < 0
End Sub
UnitTest_TestCase "TestNumberCompare_Less"

Sub TestSort_1
  Dim a(0)
  a(0) = 0
  Sort a, New NumberCompare
  AssertEqual 0, a(0)
End Sub
UnitTest_TestCase "TestSort_1"

Sub TestSort_2
  Dim a(1)
  a(0) = 1
  a(1) = 0
  Sort a, New NumberCompare
  AssertEqual 0, a(0)
  AssertEqual 1, a(1)
End Sub
UnitTest_TestCase "TestSort_2"

Sub TestSort_3
  Dim a(2)
  a(0) = 1
  a(1) = 3
  a(2) = 0
  Sort a, New NumberCompare
  AssertEqual 0, a(0)
  AssertEqual 1, a(1)
  AssertEqual 3, a(2)
End Sub
UnitTest_TestCase "TestSort_3"

Const COUNT_OF_MANY_ITEMS = 2000

Sub Testsort_Many
  Dim i
  ReDim a(COUNT_OF_MANY_ITEMS - 1)

  For i = 0 To COUNT_OF_MANY_ITEMS - 1
    a(i) = Int(Rnd * COUNT_OF_MANY_ITEMS)
  Next

  Sort a, New NumberCompare

  For i = 0 To COUNT_OF_MANY_ITEMS - 2
    Assert a(i) <= a(i + 1)
  Next
End Sub
UnitTest_TestCase "Testsort_Many"

Sub Testsort_SortedList
  Dim i
  ReDim a(COUNT_OF_MANY_ITEMS - 1)

  For i = 0 To COUNT_OF_MANY_ITEMS - 1
    a(i) = Int(Rnd * COUNT_OF_MANY_ITEMS)
  Next

  Sort a, New NumberCompare
  Sort a, New NumberCompare

  For i = 0 To COUNT_OF_MANY_ITEMS - 2
    Assert a(i) <= a(i + 1)
  Next
End Sub
UnitTest_TestCase "Testsort_Many"

UnitTest_ConsoleRun

]]></script>
</job>

<!-- Local Variables: -->
<!-- mode: Visual-Basic -->
<!-- indent-tabs-mode: nil -->
<!-- End: -->

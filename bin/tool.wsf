<?xml version="1.0" ?>
<package>

<job id="ListJob">
<runtime>
<description>
List job of tool.wsf.
These jobs are defined.

    ListJob
    ListWmiObject
    WatchEventLog
</description>
<example>
EXAMPLE: cscript tool.wsf
</example>
</runtime>
<script language="VBScript"><![CDATA[

Option Explicit

WScript.Arguments.ShowUsage

]]></script>
</job>

<job id="ListWmiObject">
<runtime>
<description>List WMI object.</description>
<named name="ns" type="string" required="false"
       helpstring="target namespace." />
<named name="security" type="boolean" required="false"
       helpstring="enable Security SID." />
<unnamed name="class" required="true" many="false"
         helpstring="class of WMI object." />
</runtime>
<script language="VBScript" src="../lib/stdlib.vbs" />
<script language="VBScript"><![CDATA[

Option Explicit

Dim optName
Dim nameSpace: nameSpace = "\root\cimv2"
Dim isSecurity: isSecurity = False
For Each optName In WScript.Arguments.Named
  Select Case UCase(optName)
    Case "NS":
      nameSpace = WScript.Arguments.Named(optName)
    Case "SECURITY":
      isSecurity = GetNamedArgumentBool(optName, WScript.Arguments.Named, False)
    Case Else:
      Err.Raise RuntimeError, WScript.ScriptName & ":ListWmiObject", "Unknown option: " & optName
  End Select
Next

Dim klassName
If WScript.Arguments.Unnamed.Count <> 1 Then
  WScript.Arguments.ShowUsage
  WScript.Quit 255
End If
klassName = WScript.Arguments.Unnamed(0)

Dim computerName
computerName = "."

Dim path
path = "winmgmts:"
If isSecurity Then
  path = path & "{(Security)}!"
End If
path = path & "\\" & computerName & nameSpace
WScript.StdOut.WriteLine "access to " & path

Dim services, klass
Set services = GetObject(path)
Set klass = services.Get(klassName)

Sub PrintSeparator(message)
  WScript.StdOut.WriteLine "---------------- " & message & " ----------------"
End Sub

Dim GetWbemOptPropInfo
Set GetWbemOptPropInfo = New WbemOptionalPropertyInformationGetter
Set GetWbemOptPropInfo.Class = klass

Dim count, obj, prop
count = 0

For Each obj In klass.Instances_
  count = count + 1
  PrintSeparator Now & ": " & klassName & ": " & count
  For Each prop In obj.Properties_
    WScript.StdOut.WriteLine prop.Name & ": " & _
      ShowValue(prop.Value) & _
      GetWbemOptPropInfo(prop.Name)
  Next
Next
PrintSeparator Now & ": End of" & klassName

]]></script>
</job>

<job id="WatchEventLog">
<script language="VBScript" src="../lib/stdlib.vbs" />
<script language="VBScript"><![CDATA[

Option Explicit

WScript.StdOut.WriteLine now

Dim computerName
computerName = "."

Dim services
Set services = GetObject("winmgmts:{(Security)}//" & computerName & "/root/cimv2")

Dim GetWbemOptPropInfo
Set GetWbemOptPropInfo = New WbemOptionalPropertyInformationGetter
Set GetWbemOptPropInfo.Class = services.Get("Win32_NTLogEvent")

Dim wql
wql = "SELECT * FROM __InstanceCreationEvent WITHIN 10 WHERE TargetInstance ISA 'Win32_NTLogEvent'"

WScript.StdOut.WriteLine "WQL: " & wql

Dim events, count, ev, prop
Set events = services.ExecNotificationQuery(wql)
count = 0

WScript.StdOut.WriteLine "start watching event Log..."
Do
  Set ev = events.NextEvent
  count = count + 1
  WScript.StdOut.WriteLine "---------------- " & Now & ": log " & count & " ----------------"
  For Each prop In ev.TargetInstance.Properties_
    WScript.StdOut.WriteLine prop.Name & ": " & ShowValue(prop.Value) & GetWbemOptPropInfo(prop.Name)
  Next
  WScript.StdOut.WriteBlankLines 1
Loop

]]></script>
</job>

</package>

<!-- Local Variables: -->
<!-- mode: Visual-Basic -->
<!-- indent-tabs-mode: nil -->
<!-- End: -->

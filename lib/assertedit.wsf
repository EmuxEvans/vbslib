<?xml version="1.0" ?>
<job id="AssertEdit">
<runtime>
<description>Reversible converter of embedded Assert Procedure Code for `unittest.vbs'.</description>
<example>
EXAMPLE

  cscript //Nologo assertedit.wsf

    [StdIn] Normal Assert Procedure Code -> [StdOut] Embedded Assert Procedure Code.
    [StdIn] Embedded Assert Procedure Code -> [StdOut] Normal Assert Procedure Code.
</example>
</runtime>
<script language="VBScript"><![CDATA[

Option Explicit

Dim EmbeddedAssertCode
Set EmbeddedAssertCode = New RegExp
EmbeddedAssertCode.Pattern = "^assertExpr\.Add "

Dim StartWithQuotation
Set StartWithQuotation = New RegExp
StartWithQuotation.Pattern = "^\s*"""

Dim EndWithQuotation
Set EndWithQuotation = New RegExp
EndWithQuotation.Pattern = """\s*$"

Dim Quotation
Set Quotation = New RegExp
Quotation.Pattern = """"
Quotation.Global = True

Dim EscapedQuotation
Set EscapedQuotation = New RegExp
EscapedQuotation.Pattern = """"""
EscapedQuotation.Global = True

Dim line

Do Until WScript.StdIn.AtEndOfStream
  line = WScript.StdIn.ReadLine
  If EmbeddedAssertCode.Test(line) Then
    line = EmbeddedAssertCode.Replace(line, "")
    line = StartWithQuotation.Replace(line, "")
    line = EndWithQuotation.Replace(line, "")
    line = EscapedQuotation.Replace(line, """")
  Else
    line = Quotation.Replace(line, """""")
    line = "assertExpr.Add """ & line & """"
  End If
  WScript.StdOut.WriteLine line
Loop

]]></script>
</job>

<!-- Local Variables: -->
<!-- mode: Visual-Basic -->
<!-- indent-tabs-mode: nil -->
<!-- End: -->

